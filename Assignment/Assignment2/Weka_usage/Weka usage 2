Click back to the "Pre-process" tab at the top, and load the training data if you haven't already done so.
Clicking anywhere in the "1 id" line will show you the statistics on that attribute. Tick the (small) box in between "1" and "id". Then click the (large) "Remove" button in the bottom-left. The attribute vanishes, which means that Weka is pretending that it isn't there.
Click back to the "Classify" tab - let's see if Naive Bayes works better without this attribute. Confirm that the settings are the same as before (You're using "NaiveBayes", "dev.arff" is the Supplied test set, "(Nom) class" is the class), and click "Start".
Weka throws an error! "Train and test set are not compatible." This occurs because Weka wants the headers in the training and test set to be exactly the same. Since we've Removed the "id" attribute from the training set, but not the development set, the headers are different, and Weka complains.
(Newer versions of Weka offer to "automatically wrap the classifier in an 'InputMappedClassifier' before proceeding" - where Weka tries to work out which attributes should line up. This will (probably) work in this case, but is a little unpredictable - you should check the "Attribute mappings" if you decide to take Weka's guesses.)
We could still evaluate this model using Cross-validation (oh, you should never "Use training set" to evaluate; it annoys me that Weka even includes it as an option): click the "Cross-validation Folds 10" radio button, and "Start". In a moment, Weka will have finished evaluating the 10 folds, and produce an output summary based on the training instances. Observe that, this time, there are 2572 "Correctly Classified Instances" (81.2%), but we can't directly compare this figure to the one above (82.2%), because they have been calculated with respect to different evaluation sets. (You might like to go back and cross-validate on the original training data, with the ID attribute, later.)
So, can we transform the dev.arff file into a format that Weka likes? Well, we could write a program which automatically removes the attribute line from the header, and all of the ID values from each instance (it's easy using regular expressions! (-: ). But, I'm feeling lazy, so I'll ask Weka to do it for me.
Click back to the "Pre-process" tab. Click "Open file...", navigate to "dev.arff", and open it. Remove the "id" attribute as before (tick the box, click "Remove"). Now click the "Save..." button at the top-right; let's call this "dev-noid.arff".
Open the "train.arff" file again from the "Pre-process" tab. (Otherwise, we would be training on the dev set, which we don't want! (-: ) Remove the ID attribute once more. (If you wish, you might save this file as "train-noid.arff".)
Back at the "Classify" tab, use "dev-noid.arff" as the "Supplied test set". Confirm the other options (NaiveBayes, (Nom) class) are correct, and click Start.
Observe that the "Correctly Classified Instances", based on the dataset without the ID attribute, are 881 (81.9%). This is actually (very slightly) worse than before! You might like to ask which instances are being classified incorrectly now, which were correct before, and think about why that might have happened. Or, there might be some instances that were incorrect before, but are correct now (and why?).